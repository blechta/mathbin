#!/bin/bash                              
# Call this script like
#   Princetonbook http://press.princeton.edu/chapters/absil

# Parse the arguments
if [ ! $# = 1 ]; then
	echo "Usage: $(basename $0) URL-to-Princeton-content"
	echo "Example: $(basename $0) http://press.princeton.edu/chapters/absil"
	exit
fi

# First (and only) command line argument is the URL of the online resource
URL=$1                                                                     
echo "Looking up $URL"

# Remember the current directory
pushd .

# Make a temporary directory 
TARGETDIR=/tmp/$RANDOM$RANDOM
TARGETDIR=/tmp/123
echo "Making directory /tmp/$TARGETDIR"
# rm -rf $TARGETDIR
# mkdir $TARGETDIR

# Get the source
cd $TARGETDIR
echo "$(basename $0): Getting the HTML source"
wget --user-agent="Mozilla/5.0" $URL -O source

# Create an approximate title for the final pdf file
BOOKTITLE=$(grep "<TITLE>" source | perl -ne '/<TITLE>(.*)<\/TITLE>/ and $string=$1 and $string =~ s/ /_/g and print "$string\n";')

# Parse the source to retrieve an ordered list of download URLs
grep '<a class="san" href="/chapters/.*">' source | awk '{split($0,list,"\""); print "http://press.princeton.edu" list[4]}' > list

# Retrieve the individual files from SIAM
echo "$(basename $0): Getting the individual chapter files"
wget --user-agent="Mozilla/5.0" -i list -o logfile

# If resource was secured, print an error message and exit
# grep --silent resource-secured logfile
# if [ $? == 0 ]; then
# 	echo "$(basename $0): Resource seems to be secured."
# 	exit
# fi

# Create a list of files to concatenate
# See http://superuser.com/questions/270256/how-to-make-grep-p-foo-b-r-display-only-whats-in-the-brackets-do-i-need
perl -ne '/^Saving to: (‘|\`|“)(.+?)(’|'\''|”)$/ and print "$2\n";' < logfile > download_list

# qpdf is confused by the name of the downloaded files.
# Therefore, we rename them.
j=0;
rm -f concat_list;
OIFS=$IFS
IFS=$'\n'
for i in $(cat download_list); do
	mv "$i" $((++j)).pdf;
	echo $j.pdf >> concat_list
done
IFS=$OIFS

# Concatenate the pdf files to a book
echo "$(basename $0): Concatenating files"
qpdf --empty $BOOKTITLE --pages $(cat concat_list) --

# Return to the current directory
popd

# Inform the user
echo "The book has been compiled and now resides in $TARGETDIR/$BOOKTITLE"


