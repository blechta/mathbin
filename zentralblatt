#!/bin/bash

# zentralblatt - A wrapper script for nicer output of zentralblatt
#
# Authors:      Roland Herzog <roland.herzog@mathematik.tu-chemnitz.de>
#               Gerd Wachsmuth <gerd.wachsmuth@mathematik.tu-chemnitz.de>
# Version:      0.2
# Licence:      GPL v3, see http://www.gnu.org/licenses/gpl.html

PROG1='
function ltrim(s) { sub(/^[ \t\r\n]+/, "", s); return s }
function rtrim(s) { sub(/[ \t\r\n]+$/, "", s); return s }
function trim(s) { return rtrim(ltrim(s)); }
BEGIN {
	delete_this_entry = 0;
	spaces = "              ";
};
/^@/ {
	# Print the header of the entry.
	print(toupper($0));
	next;
}
/^ *(Journal|Language|MSC2010|Zbl)/ {
	# Delete certain unnecessary entries.
	delete_this_entry = 1;
	next;
};
/^ *[a-zA-Z]+ *=/ {
	# Nicer formatting of the remaining entries.
	delete_this_entry = 0;
	sub("=[\"{]", " = {");
	sub("\",$", "},");
	gsub("FJournal", " journal");

	split($0,strarray,"=");
	# Uppercase the left-hand side
	strarray[1] = trim(toupper(strarray[1]))
	# Fill in some spaces
	strarray[1] = substr(spaces, 0, (10-length(strarray[1]) +1)) strarray[1]
	print strarray[1] " = " trim(strarray[2]);
	next;
};
/^}$/ {
	print;
	next;
};
// {
	if (delete_this_entry == 0) {
		sub("\",$", "},");
		# Fill in some spaces
		print "          " $0;
	}
};
'

PROG2='
/@[A-Z]*{[A-Za-z0-9.]*,/{
	# Save the header and init some variables.
	head=substr($0,0,match($0,"{"));
	body="";
	authors_active=0;
	have_read_authors=0;
	year=0;
	next;
}
/^}$/{
	# This is the end of the entry. Print everything!
	body=body $0;
	printf "%s",head;
	# Create a nice label (authors or editors and year) for the entry.
	count=split(authors,author_array," +and +");
	for( i=1; i<=count; i++ ) {
		# printf "--\"%s\"--", author_array[i];
		lastname=gensub("^.*{([^}]*)}.*$", "\\1", "g", author_array[i]);
		lastname=gensub("\\\\\"([a-zA-Z])","\\1e","g", lastname);       # test for umlauts
		lastname=gensub("\\\\ss","ss","g", lastname);                   # test for eszett
		lastname=gensub("\\\\[^{}]*{([a-zA-Z])}","\\1","g", lastname);  # test for accents (this is needed two times, e.g. for "{\v{c}}")
		lastname=gensub("\\\\[^{}]*{([a-zA-Z])}","\\1","g", lastname);
		lastname=gensub("'\''","","g", lastname);                       # Remove apostroph
		word_count = split( lastname, lastname_array, " ");             # Split lastname into words and capitalize each of them
		lastname = "";
		for( j=1; j<= word_count; j++ ) {                               # Fuer Juan Carlos ;)
			lastname = lastname toupper(substr(lastname_array[j],1,1)) substr(lastname_array[j],2,1000);
		}
		printf "%s",lastname;
	};
	print year ",";
	print body "\n";
	next;
}
/ *[A-Z]* =/{
	if( $1 == "AUTHOR" ) {
		# If we already have read the editors, we overwrite them.
		authors=substr($0,match($0,"{")+1,100);
		authors_active=1;
		have_read_authors=1;
	}
	else if( ($1 == "EDITOR") && !have_read_authors){
		# If we already have read the authors, we skip the editors.
		authors=substr($0,match($0,"{")+1,100);
		authors_active=1;
	}
	else if( $1 == "TITLE" ) {
		gsub(".}},$", "}},");
	}
	else {
		authors_active=0;
		if($1 == "YEAR"){
			year=substr($0,match($0,"[[0-9]]*"),4)
		}
	};
}
/^[^=]*$/{
	if(authors_active){
		authors=authors $0;
	}
}
//{
	body=body $0 "\n";
	next;
}'

zentralblatt.pl "$@" | awk "$PROG1" | gawk "$PROG2"
